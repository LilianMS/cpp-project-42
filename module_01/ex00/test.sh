#!/bin/bash

GREEN="\033[1;32m"
YELLOW="\033[1;33m"
RED="\033[1;31m"
RESET="\033[0m"

EXEC=./zombie
EXPECTED1="HeapZombie: BraiiiiiiinnnzzzZ..."
EXPECTED2="StackZombie: BraiiiiiiinnnzzzZ..."

echo -e "${YELLOW}üîß Compiling with Makefile...${RESET}"
make re

if [ ! -f $EXEC ]; then
    echo -e "${RED}‚ùå Error: executable not found.${RESET}"
    exit 1
fi

echo -e "${YELLOW}‚ñ∂Ô∏è Running ${EXEC}...${RESET}"
OUTPUT=$($EXEC)

echo -e "\n${YELLOW}üì§ Program output:${RESET}"
echo "$OUTPUT"

# Checks
echo -e "\n${YELLOW}üîé Checking expected output...${RESET}"

if echo "$OUTPUT" | grep -q "$EXPECTED1"; then
    echo -e "${GREEN}‚úÖ HeapZombie OK${RESET}"
else
    echo -e "${RED}‚ùå HeapZombie missing or incorrect${RESET}"
fi

if echo "$OUTPUT" | grep -q "$EXPECTED2"; then
    echo -e "${GREEN}‚úÖ StackZombie OK${RESET}"
else
    echo -e "${RED}‚ùå StackZombie missing or incorrect${RESET}"
fi

# Valgrind (optional)
echo -e "\n${YELLOW}üî¨ Checking memory with Valgrind...${RESET}"
valgrind --leak-check=full --error-exitcode=1 $EXEC > /dev/null 2>&1

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ No memory leaks detected.${RESET}"
else
    echo -e "${RED}‚ùå Memory leak detected!${RESET}"
fi
